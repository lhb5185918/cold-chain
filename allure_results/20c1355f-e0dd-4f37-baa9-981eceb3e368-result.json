{"name": "test_ice_add[ice_add0]", "status": "failed", "statusDetails": {"message": "AssertionError: assert (200 == 200 and '冷柜设备编码【T1】已存在,操作失败' == '成功'\n  \n  - 成功\n  + 冷柜设备编码【T1】已存在,操作失败)", "trace": "self = <testcase.test_cold_ice.TestColdIce object at 0x00000210FFE74520>\nice_add = {'data': {'equipmentCode': 'T1', 'equipmentName': 'test_ice', 'externalHeight': None, 'externalLength': None, ...}, 'method': 'POST', 'title': '冷柜资料新增', 'url': 'http://bswms-uat-01.baheal.com:7777/bp/base/freezerInfo/add'}\nget_token = {'Authorization': 'Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX25hbWUiOiJsaGIiLCJjcmVhdGVkIjoxNzE3MjMxNzU1MTg...IX288rHsSlc0tjcVXQNAVj7zStboBhd9cs5OBdYahbIFA-vR5ty86SJ-6WGsad_4IyVKFIperkbORS-jjv0_vMBirVtEQkXJh6j8ouKhlNUiXGrtW4lNQ'}\n\n    @allure.feature(\"冷柜资料新增\")\n    @pytest.mark.run(order=9)\n    @pytest.mark.parametrize(\"ice_add\", ice_add)\n    # 冷柜资料新增用例\n    def test_ice_add(self, ice_add, get_token):\n        url = ice_add['url']\n        data = ice_add['data']\n        title = ice_add['title']\n        res = Request().send(url=url, method='post', data=data, header=get_token)\n        logger.info(\"{} {} {} \".format(title, res['body'], res['code']))\n        if title == '冷柜资料重复新增':\n            assert res['code'] == 200 and res['body']['msg'] == '设备型号已存在'\n        elif title == '冷柜资料新增':\n>           assert res['code'] == 200 and res['body']['msg'] == '成功'\nE           AssertionError: assert (200 == 200 and '冷柜设备编码【T1】已存在,操作失败' == '成功'\nE             \nE             - 成功\nE             + 冷柜设备编码【T1】已存在,操作失败)\n\ntestcase\\test_cold_ice.py:121: AssertionError"}, "attachments": [{"name": "log", "source": "fe64c835-8db5-4855-921f-3a6fbe994fc4-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "e6dc0782-efaa-4dbb-bd23-5c76df859dc3-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "ice_add", "value": "{'title': '冷柜资料新增', 'url': 'http://bswms-uat-01.baheal.com:7777/bp/base/freezerInfo/add', 'method': 'POST', 'data': {'isEnable': 1, 'workStatus': 10, 'equipmentCode': 'T1', 'rfid': 'T1', 'freezerCategoryId': '1764869874045440', 'weight': None, 'innerLength': None, 'innerWidth': None, 'innerHeight': None, 'innerVolume': None, 'externalLength': None, 'externalWidth': None, 'externalHeight': None, 'externalVolume': None, 'factoryModel': None, 'phaseTransitionTemperature': None, 'equipmentName': 'test_ice', 'imageList': []}}"}], "start": 1717231756626, "stop": 1717231756685, "uuid": "a900bf14-a7fd-4af8-b90f-ce4a6b3fc716", "historyId": "98dfcc128d942b1715d373eed43362af", "testCaseId": "a67481a896d5687e730339f92e916c7d", "fullName": "testcase.test_cold_ice.TestColdIce#test_ice_add", "labels": [{"name": "feature", "value": "冷柜资料新增"}, {"name": "tag", "value": "run(order=9)"}, {"name": "parentSuite", "value": "testcase"}, {"name": "suite", "value": "test_cold_ice"}, {"name": "subSuite", "value": "TestColdIce"}, {"name": "host", "value": "lhb"}, {"name": "thread", "value": "15512-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcase.test_cold_ice"}]}